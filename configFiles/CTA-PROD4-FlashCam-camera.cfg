% Configuration file for a FlashCam camera by itself, for use on either a CTA MST or another telescope.

camera_config_name = FlashCam
camera_config_version = 2019-06-28 % Updated funnel efficiency in camera config file, pulse shape, single-p.e. response

camera_transmission = 1.0 % All of the transmission is now included in the camera_filter file.
camera_filter = Aclylite8_tra_v2013ref.dat

% Fixed camera orientation, disabling six pixels (three holding window plate, three in corners).
echo Using patch3_digitalsum9 version of FlashCam camera configuration.
% The digital sum trigger with pre-summation of FADC values in a patch of three pixels each.
% camera_config_file = camera_CTA-MST-FlashCam_patch3_digitalsum9.dat
% camera_config_file = camera_CTA-MST-FlashCam_patch3_digitalsum9_neweff.dat
camera_config_file = camera_CTA-MST-FlashCam_patch3_digitalsum9_neweff2.dat % same except cone eff.
camera_pixels = 1764  % needs to be specified explicitly (includes plate-holder non-operational positions)

min_photons = 360            % With fewer photons don't waste CPU time.
min_photoelectrons = 25      % Usually, more than 60 p.e. are required.
store_photoelectrons = 22    % Save individual photo-electrons

% Override old single-p.e. response for the time being with FlashCam measured spe spectrum. 2019-02-21.
% This should eventually be the same for LST/MST-NC/MST-FC.
pm_photoelectron_spectrum = spe_FlashCam_7dynode_v0a.dat

% --------------- Placing of signals in simulated windows ---------------

% We need to shift the pulses further 'right' in the simulated time windows,
% such that the occasional early signals (at large core distance) are better covered.
photon_delay = 12    % ns

% --------------------------- Trigger -----------------------------------

% The threshold values in this section are based on the assumption that 'dark' sky
% has a NSB pixel p.e. rate of about 260 MHz (CTA MST-FC).

% The digital sum trigger does not actually use the following parameters but 
% they are technically needed anyway:
disc_bins = 30  % Number of time intervals simulated for trigger. [NO-EFFECT]
disc_start = 0  % How many intervals the trigger simulation starts before the ADC. [NO-EFFECT]

discriminator_pulse_shape = pulse_FlashCam_7dynode_v2a.dat % formally needed but not actually used with digital sum trigger [NO-EFFECT]
discriminator_amplitude = 0. % No analog trigger electronics (majority or analog sum) [NO-EFFECT]

#define DIGITAL_SUM 1

% Telescope trigger (specified even if no majority trigger is used):
default_trigger = DigitalSum

trigger_current_limit = 2000.0 % [microAmps] Is this really applicable for digital sum trigger ?

echo Trying to emulate trigger processing by FlashCam FPGA more closely.
% Since the FlashCam FPGA does not subtract the pedestal as a first step in
% trigger pulse shaping, the 'pz' variant is out of the question.
dsum_pedsub = 0 % No pedestal subtracted before shaping.
dsum_shaping_file = CTA-ULTRA6-dsum-shaping-FlashCam-2a-int.dat % 1/1/-1/-1 shaping.
% For the intended clipping, originally with '2a' and '2a-pz' shaping at 360 ADC counts
% and now (with '2a-int' being 1/1/-1/-1 rather than 0.5/0.5/-0.5/-0.5 as '2a', i.e. twice
% as big) forced to be at 85 prescaled ADC counts, we need a prescaling factor of about 0.118.
% Simplest approximation in integer, with the denominator being a power of 2 (corresponding
% to an actual bit shift) is * 1 / 8 (alternative: * 30 / 256).
dsum_shaping_renorm = 0 % No renorm. Otherwise the '1/1/-1/-1/' gets converted to a '0.5/0.5/-0.5/-0.5'.
dsum_ignore_below = 0 % If you want to ignore shaped values below given lower threshold.
dsum_zero_clip = 1 % -1: after presum, 0: no, 1: before pre-sum (only relevant if ignore_below=0).
dsum_prescale = 40 256 % Divide by 256 (byte shift) is simplest for FPGA. For amplitude 8.8.
#ifdef HALFMOON
dsum_prescale = 30 256 % Scale further down under high NSB rather than just increasing threshold.
#endif
dsum_clip = 85 % Result of adding up three pixels in a patch must be <= 255 (or have 2-level clipping).
dsum_presum_shift = 1 % Shift right by 1 bit (divide by 2) after patch sum, result <= 127 (7 bits).
dsum_presum_max = 127 % 7-bit value must be in range 0 to 127.
dsum_threshold = 50   % 
#ifdef HALFMOON
dsum_threshold = 51   % with smaller pre-scaling factor than for 1-2x dark sky
#endif

% Trigger thresholds were evaluated also for a range of lower thresholds in signal summation:
#ifndef DSUM_LOWER_THRESHOLD
# define DSUM_LOWER_THRESHOLD 0
#endif

% Note that the lower threshold applied here is the actual one as applied
% and not, like used by the FlashCam group, one anticipating the later bit shift.
dsum_ignore_below = $(DSUM_LOWER_THRESHOLD)
#if DSUM_LOWER_THRESHOLD <= 20
   dsum_threshold = 50
#elif DSUM_LOWER_THRESHOLD <= 40
   dsum_threshold = 49
#elif DSUM_LOWER_THRESHOLD <= 60
   dsum_threshold = 47
#elif DSUM_LOWER_THRESHOLD <= 80
   dsum_threshold = 45
#elif DSUM_LOWER_THRESHOLD <= 100
   dsum_threshold = 43
#elif DSUM_LOWER_THRESHOLD <= 120
   dsum_threshold = 42
#else
   dsum_threshold = 41
#endif

% Thresholds for high-NSB rates are achieved with different scaling factors
#ifdef THRESHOLD_5X
  nsb_scaling_factor = 5 
  dsum_prescale = 30 256  % Smaller prescaling factor for higher effective threshold
  dsum_threshold = 51     % Same nominal threshold setting
#endif
#ifdef THRESHOLD_7X
   nsb_scaling_factor = 5 % Yes simulation is actually at 5x dark NSB.
   dsum_prescale = 30 256 % Smaller prescaling factor for higher effective threshold
%  dsum_threshold = 57    % Same nominal threshold setting
#endif
#ifdef THRESHOLD_30X
  nsb_scaling_factor = 30
  dsum_prescale = 10 256  % Smaller prescaling factor for higher effective threshold
  dsum_threshold = 10000  % Not meant to be usable at 30x dark (pixels may be disabled due to current)
  min_photons = 100000000 % Bypass processing this telescope as early as possible
#endif


teltrig_min_time                       0 % ns -- irrelevant with dsum trigger
teltrig_min_sigsum                     0 % pV.s -- irrelevant with dsum trigger

trigger_delay_compensation = all:0.      % Non-zero values no longer needed after prod-2.

asum_threshold = 0.0 % No analog sum trigger [NO-EFFECT]

% only_triggered_arrays=0
only_triggered_telescopes=1

% ------------------------------ Readout --------------------------------

transit_time_compensate_step = 1.0  % ns: Programmable delay compensation is in steps of 1.0 ns
transit_time_compensate_error = 0.2 % ns: Assume error in accuracy of determining compensation.

% Sampling rate in MHz:
fadc_MHz = 250 % MHz sampling rate

% fadc_pulse_shape = pulse_FlashCam_raw2.dat % Revised (2015) version of FlashCam pulse shape.
fadc_pulse_shape = pulse_FlashCam_7dynode_v2a.dat % Revised (2019) version of FlashCam pulse shape for 7-dynode PMTs.
fadc_ac_coupled = 0        % DC coupled: pedestal rising with increasing NSB

% Read-out of a 100 ns window (within simulated 176 ns) following the actual trigger:
fadc_bins = 48             % Number of time intervals simulated for FADC.
fadc_sum_bins = 25         % Number of FADC time intervals in recorded sample-mode signal traces.
fadc_sum_offset = 6        % How many intervals summation starts before the telescope trigger.

fadc_pedestal = 200        % Per time slice (positive signals only: unsigned!)
% fadc_amplitude = 10.0    % The mean single-p.e. peak amplitude = 10.0 in a time slice for high gain.
% fadc_amplitude = 10.33   % If most likely single-p.e. amplitude = 10.0 (depends on spe_R11920-MS_ap0.0002.dat)
fadc_amplitude = 8.787     % If most likely single-p.e. amplitude = 10.0 (with spe_FlashCam_7dynode_v0a.dat)
fadc_noise = 1.0           % Again per time slice (high gain).

num_gains = 1              % No extra low-gain channel

fadc_max_signal = 65535    % Avoid pre-amp saturation with long pulses (use post-processing to emulate that).
% fadc_max_signal = 4095   % Once non-linear response is included in simulation that would be the actual limit.

