% Configuration file for SC MST Telescope with OS8 optical system and 8 deg FoV.
%
% Author: D. Nieto
% Email: nieto@nevis.columbia.edu
% Date: 2014-06-03
%
% Updated from CTA-ULTRA5-medium-sc.cfg (Prod2)
% 
% CTA-ULTRA5-medium-sc.cfg
% Author: A. Bouvier
% Email: apbouvie@ucsc.edu
% Date:   2013-05-02

% Adapted by KB for Prod-3.
% Adapted by KB for Prod-4.
% Adding segmentation of primary and secondary (KB, 2019-03-15)
% Adjusting camera parameters as discussed, some set as for CHEC (KB, 2019-03-28)
% Updated PDE (KB, 2020-04-21)

echo
echo *******************************************************************
#ifdef TELESCOPE
echo Configuration for SC-MST telescope $(TELESCOPE) in Prod-4.
#else
echo Global configuration parameters for SC-MST telescopes in Prod-4.
#endif
echo *******************************************************************
echo

% Start with configuration items not specific for SC-MST (SCT).

#include <CTA-PROD4-site.cfg>
#include <CTA-PROD4-common.cfg>
#include <CTA-PROD4-sipm.cfg>

% The remainder is specific for SCT.

% ------------------------- Optical parameters --------------------------

optics_config_name = SCT
optics_config_version = 2019-03-15

mirror_class = 2

% Akira''s parameterization:

% Primary mirror
primary_mirror_parameters = 8.4374e-06, 0.110917, -0.00511208, -0.0118961, 0.0253067, -0.0460152, 0.0413689, -0.0172745 % last digit was missing in prod-2
primary_ref_radius = 558.63 % [cm]
primary_diameter = 966.38 % [cm]
primary_hole_diameter = 438.66 % [cm]

primary_segmentation = sct_primary_segments.dat

% Secondary mirror
secondary_mirror_parameters =        1.5,  0.416688,  0.144035, -0.647955,  2.96087, -9.39256,  18.0811, -15.3711
secondary_ref_radius = 558.63 % [cm]
secondary_diameter = 541.66 % [cm]
secondary_hole_diameter = 78.9 % [cm] % This parameter was missing in prod-2 because the feature was not available in the beginning of prod-2.

secondary_segmentation = sct_secondary_segments.dat

focal_surface_param = 651.485, -1.33436e-03, 2.86525e-8 % Focus to some 8.2 km distance (shower max.)
% focal_surface_param = 651.7353, -1.33436e-03, 2.86525e-8 % Focus to infinity
focal_length = 558.63 % [cm]
effective_focal_length = 558.310 % cm
focal_surface_ref_radius = 1.0 % [cm]

random_focal_length =            0.0 
mirror_reflection_random_angle = 0.025
mirror_align_random_distance   = 0.0 
mirror_align_random_horizontal = 0.0 
mirror_align_random_vertical   = 0.0 

mirror_reflectivity = Reflectance_SC-MST_Prod3.dat
mirror_list = none % No extra file needed
mirror_offset       = 0.       
focus_offset        = 0.0      
telescope_transmission = 0.81

% Accuracy of the tracking and measurement of current direction.
% telescope_random_angle         = 0.005
% telescope_random_error         = 0.001
% Pointing errors can always be mimicked at the analysis level:
telescope_random_angle         = 0.
telescope_random_error         = 0.

% -------------------------- Camera ------------------------------

camera_config_name = SCT
camera_config_version = 2019-03-28

camera_body_diameter =  154.0   % cm (only for shadowing)
camera_depth = 0 % cm (keep flat since camera body does not contribute to shadowing anyway)

camera_config_file   = camera_CTA-SC-MST-54mmModPitch_0.5mmModDS_6.5mmPixAct_Prod3.dat	
camera_pixels        = 11328  % needs to be specified explicitly

% quantum_efficiency = PDE_SiPM_SC-MST_Prod3.dat % cut off at 700 nm
% quantum_efficiency = PDE_SiPM_SC-MST_Prod3x.dat % extended with 0.64*ASTRI beyond 700 nm
quantum_efficiency = PDE_FBK_final_calibrated.dat % by Olivier Hervet 2020-02-27, see Redmine issue 37521
pm_photoelectron_spectrum = Pulse_Height_Hybrid2_Xtalk5per_norm_Prod3.dat

transit_time_jitter  = 0.0  % PMT single p.e. transit time jitter [ns].

gain_variation = 0.02
qe_variation = 0.04

min_photons = 600            % With fewer photons dont waste CPU time.
min_photoelectrons = 25      % Usually, more than 60 p.e. are required.
store_photoelectrons = 20

% nightsky_background = all:0.052    % Re-evaluated with testeff and extended PDE (64% of ASTRI above 700 nm) (KB)
% nightsky_background = all:0.05169  % Re-evaluation with Benn&Ellison spectrum: 0.262 ph./(cm^2 ns sr)
% nightsky_background = all:0.04711  % For reference NSB intensity: 0.24 ph./(cm^2 ns sr)
nightsky_background = all:0.05345  % For reference NSB intensity, with new PDE.

% --------------------------- Trigger -----------------------------------

default_trigger = Majority

% The trigger simulation is over a slightly larger time window than FADC signals.
% DN: values changed (suggested by KB) from prod2 original ones to adapt trigger 
% to 64ns readout window
disc_bins = 80 % was 42  % Number of time intervals simulated for trigger.
disc_start = 0 % was 2 % How many intervals the trigger simulation starts before the ADC.

% Majority & analog sum input pulses:
discriminator_pulse_shape = PulseShape_MPPC_S10943_Shaped_CutOff350MHz_Prod3.dat
discriminator_amplitude = 1.0 % mV for mean p.e. amplitude

% Discriminator threshold (and corresponding multiplicity for telescope trigger):
trigger_pixels = 3
discriminator_threshold = 7.49   % corresponding to 10 kHz accidental triggers at twice the new 52 MHz NSB rate
#ifdef SCT_TWO_PIXELS
trigger_pixels = 2               % Energy threshold achieved at multiplicity two is 10% lower than at multiplicity three.
discriminator_threshold = 9.44   % corresponding to 30 kHz accidental triggers at twice the new 52 MHz NSB rate
#endif
discriminator_var_threshold = 0  % mV channel-to-channel variation

% Discriminator switching parameters:
discriminator_time_over_threshold    = 0.5 % to be checked
discriminator_var_time_over_threshold= 0   % all channels behaving the same
discriminator_sigsum_over_threshold  = 0   % no switching charge assumed
discriminator_var_sigsum_over_threshold = 0
discriminator_hysteresis             = 0.0 % hysteresis not really relevant for real discriminator

% Outputs from pixel 'logic':
discriminator_gate_length        = -14.0   % Real discriminator (negative parameter value)
discriminator_var_gate_length    = 0
discriminator_output_amplitude   = 1.0     % output in units of (super-)pixels
discriminator_output_var_percent = 0       % all channels having the same amplitude
discriminator_rise_time = 0.5              % [ns]
discriminator_fall_time = 0.5              % [ns]

% Telescope trigger (see also 'trigger_pixels' above):
default_trigger = Majority
teltrig_min_time  =  0.5                   % [ns]
teltrig_min_sigsum = 0.0                   % pV.s (if discriminator_output_amplitude is in milliVolts).

trigger_delay_compensation = 0,0,0         % Only using majority type, there is no point in delay compensation.

% only_triggered_arrays=0
only_triggered_telescopes=1

% ------------------------------ Readout --------------------------------

% Sampling rate in MHz:
fadc_mhz = 1000

fadc_pulse_shape = PulseShape_MPPC_S10943_Shaped_CutOff350MHz_Prod3.dat

% Read-out of a 64 ns window (within simulated 80 ns) following the actual trigger:
% DN: values changed (suggested by KB) from prod2 original ones to 64ns readout window

fadc_bins = 80 % was 40  % Number of time intervals simulated for ADC.
fadc_sum_bins = 64 % was 32   % Number of ADC time intervals actually read out.
fadc_sum_offset = 12 % was 5  % How many intervals readout starts before telescope trigger.
#ifdef DATA_RATE_TEST
% Use just the 60 ns readout window mentioned in the DATA TDR.
fadc_sum_bins = 60            % Number of ADC time intervals actually read out.
fadc_sum_offset = 11          % How many intervals readout starts before telescope trigger.
#endif

fadc_max_signal = 4095        % Detailed response and analysis of saturated pulses needs post-processing.
                              % At this point assuming ADC saturation is the only effect.

fadc_pedestal = 600           % Per time slice (positive signals only: unsigned!)
fadc_amplitude = 2.1          % The pulse peak amplitude in a time slice, mean p.e. value (for most likely ~2.0).
fadc_noise = 0.5              % Again per time slice (high gain), in ADC units (white noise).
fadc_sensitivity = 1.0        % 

num_gains = 1                 % Can simulate two gains but need only one.

% ----------------------------- Analysis --------------------------------

output_format = 1

% Pulse shape analysis with pulse sum around global peak
% position only for significant pixels.
pulse_analysis = -26

% Pulse analysis provides a conditional 8 ns integration at 1000 MHz sampling rate.
sum_before_peak = 3
sum_after_peak = 4

tailcut_scale = 1.0
